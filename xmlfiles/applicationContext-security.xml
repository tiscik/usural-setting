<?xml version="1.0" encoding="UTF-8"?> 
<b:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:b="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.1.xsd">
    <!-- 登陆页面不过滤 -->       
	<http pattern="/login" security="none"/>
	<http access-denied-page="/accessDenied">
		<form-login login-page="/login"/>
		<session-management>
			<concurrency-control max-sessions="1" error-if-maximum-exceeded="false"/>
		</session-management>
		<custom-filter ref="myFilter" before="FILTER_SECURITY_INTERCEPTOR"/>
	</http>
	 <!--一个自定义的filter，必须包含 authenticationManager,accessDecisionManager,securityMetadataSource三个属性，   
        我们的所有控制将在这三个类中实现，解释详见具体配置 -->
	<b:bean id="myFilter" class="com.joiniot.lock.security.MyFilterSecurityInterceptor">
		<b:property name="authenticationManager" ref="authenticationManager"/>
		<b:property name="accessDecisionManager" ref="myAccessDecisionManagerBean"/>
		<b:property name="securityMetadataSource" ref="securityMetadataSource"/>
	</b:bean>
	
	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="myUserDetailService">
			<password-encoder hash="md5"/>
		</authentication-provider>
	</authentication-manager>
	<!--在这个类中，你就可以从数据库中读入用户的密码，角色信息，是否锁定，账号是否过期等 --> 
	<b:bean id="myUserDetailService" class="com.joiniot.lock.security.MyUserDetailService"/> 
	<!--访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->  
    <b:bean id="myAccessDecisionManagerBean" class="com.joiniot.lock.security.MyAccessDecisionManager"/>
     <!--资源源数据定义，将所有的资源和权限对应关系建立起来，即定义某一资源可以被哪些角色访问 --> 
    <b:bean id="securityMetadataSource" class="com.joiniot.lock.security.MyInvocationSecurityMetadataSouce"/>    
</b:beans>	